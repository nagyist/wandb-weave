interactions:
- request:
    body: '{"messages":[{"role":"system","content":"Your input fields are:\n1. `question`
      (str)\n\nYour output fields are:\n1. `reasoning` (str)\n2. `answer` (str)\n3.
      `explanation` (str)\n\nAll interactions will be structured in the following
      way, with the appropriate values filled in.\n\n[[ ## question ## ]]\n{question}\n\n[[
      ## reasoning ## ]]\n{reasoning}\n\n[[ ## answer ## ]]\n{answer}\n\n[[ ## explanation
      ## ]]\n{explanation}\n\n[[ ## completed ## ]]\n\nIn adhering to this structure,
      your objective is: \n        Given the fields `question`, produce the fields
      `answer`, `explanation`."},{"role":"user","content":"[[ ## question ## ]]\nHow
      would a typical person answer each of the following questions about causation?\nA
      machine is set up in such a way that it will short circuit if both the black
      wire and the red wire touch the battery at the same time. The machine will not
      short circuit if just one of these wires touches the battery. The black wire
      is designated as the one that is supposed to touch the battery, while the red
      wire is supposed to remain in some other part of the machine. One day, the black
      wire and the red wire both end up touching the battery at the same time. There
      is a short circuit. Did the black wire cause the short circuit?\nOptions:\n-
      Yes\n- No\n\nRespond with the corresponding output fields, starting with the
      field `[[ ## reasoning ## ]]`, then `[[ ## answer ## ]]`, then `[[ ## explanation
      ## ]]`, and then ending with the marker for `[[ ## completed ## ]]`."}],"model":"gpt-4o-mini","max_tokens":1000,"temperature":0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '1559'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.65.3
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.65.3
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '600.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.8
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//jFRNj9s2EL37VwyYQy/2wl478XZvTYE2QIBFgQZpkd2FQZMjaRKKI5Aj
        K0aw/z0gJVl26gC9CBDffLz5et9mAIqsugdlKi2mbtzi7d2n5uH2r8PvH8s/31V/P+D7j9t/Pr13
        5R+d+VfNkwfvP6OR0evGcN04FGLfwyagFkxRV9vNan23WW5eZ6Bmiy65lY0sNryoydPidnm7WSy3
        i9Xd4F0xGYzqHh5nAADf8jfx9Ba/qntYzseXGmPUJar7kxGACuzSi9IxUhTtRc0n0LAX9Jn64yO8
        egUBdWRPvkw/z89P/jeQY0NGO2gwRPZQU1nJYAdSaQGpEPZOmy/QUcA5dBWZCiiCxUilT7WDMAi3
        puqNtQiG4zzZpCrQggaPJtEPRzDsLaX2QcEhO8SKg4ChYFqSFIuNacMNvOMODxjmEMkbzKYBbaYB
        2sUhZ0o/ZYWBcdQ1glCNcyBJOSXQvh25VnhGI1dpdBuHSBd0buBDhQELHkp3+END+ioP7A5ogXxG
        8YBecmKK4FkgskN3hICxYR9p7/B68XPQsX+lunWiPXIbM3ttBLiAPUuV08YUukvM3VQTt2K4xpsn
        /+T7gWsfOwzjtB94QvBr47TXuQMD/OGyMEv2nHzu0JV57XFCxvH8Eq9X0JFc7Ah0Ovaj1GACSd7E
        QhvhkHqZTytt65WxvJ06kddgNPvZHlzr1zgnb8mMiQa/vqZuGIfhek9Dsy6nELRUmCapPXxu44/n
        AtqxPx/IoB5o+6afX2vAoo06KYZvnRveX07n77hsAu/jgJ/eC/IUq11/sunUo3CjMvoyA3jOMtNe
        KIdqAteN7IS/oE8B1+tVH09N6jahq7tBhJSwaDcBr1ej20XAnUXR5OKZUimj06VOrpOs6dYSnwGz
        s7L/S+da7JOq/Z/wE2AMNoJ21wS0ZC5LnswCJvX/mdmpzZmwihgOZHAnhCGNwmKhW9drsorHKFjv
        CvIlhiZQL8xFs1u+2a63+tf18o2avcy+AwAA//8DAC2kHWymBgAA
    headers:
      CF-RAY:
      - 91cd4a88c904339c-DEL
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 07 Mar 2025 21:47:28 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=thb8KSWcI_Ux4DCMLtQHJE8th730Z1dznSF_.9Cdxf0-1741384048-1.0.1.1-GtNAEAfdBpTVD414_L2gFxYfUiYEQeEvo8gUBe4WINvDStamnNJYNAnIX.CH6OgzRPL52mht5KV57gHQNF2re6q0ZfEnT05g0iTahHo6Qf4;
        path=/; expires=Fri, 07-Mar-25 22:17:28 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=7_t6p8zWs.tIe8K2CiiqdBK2KulhJRBrcAd5BxLmsqE-1741384048768-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-organization:
      - wandb
      openai-processing-ms:
      - '3031'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '30000'
      x-ratelimit-limit-tokens:
      - '150000000'
      x-ratelimit-remaining-requests:
      - '29999'
      x-ratelimit-remaining-tokens:
      - '149998648'
      x-ratelimit-reset-requests:
      - 2ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_8ae56b6c79444caa4e7310fa2be2e073
    status:
      code: 200
      message: OK
- request:
    body: '{"messages":[{"role":"system","content":"Your input fields are:\n1. `question`
      (str)\n\nYour output fields are:\n1. `reasoning` (str)\n2. `answer` (str)\n3.
      `explanation` (str)\n\nAll interactions will be structured in the following
      way, with the appropriate values filled in.\n\n[[ ## question ## ]]\n{question}\n\n[[
      ## reasoning ## ]]\n{reasoning}\n\n[[ ## answer ## ]]\n{answer}\n\n[[ ## explanation
      ## ]]\n{explanation}\n\n[[ ## completed ## ]]\n\nIn adhering to this structure,
      your objective is: \n        Given the fields `question`, produce the fields
      `answer`, `explanation`."},{"role":"user","content":"[[ ## question ## ]]\nHow
      would a typical person answer each of the following questions about causation?\nLong
      ago, when John was only 17 years old, he got a job working for a large manufacturing
      company. He started out working on an assembly line for minimum wage, but after
      a few years at the company, he was given a choice between two line manager positions.
      He could stay in the woodwork division, which is where he was currently working.
      Or he could move to the plastics division. John was unsure what to do because
      he liked working in the woodwork division, but he also thought it might be worth
      trying something different. He finally decided to switch to the plastics division
      and try something new. For the last 30 years, John has worked as a production
      line supervisor in the plastics division. After the first year there, the plastics
      division was moved to a different building with more space. Unfortunately, through
      the many years he worked there, John was exposed to asbestos, a highly carcinogenic
      substance. Most of the plastics division was quite safe, but the small part
      in which John worked was exposed to asbestos fibers. And now, although John
      has never smoked a cigarette in his life and otherwise lives a healthy lifestyle,
      he has a highly progressed and incurable case of lung cancer at the age of 50.
      John had seen three cancer specialists, all of whom confirmed the worst: that,
      except for pain, John''s cancer was untreatable and he was absolutely certain
      to die from it very soon (the doctors estimated no more than 2 months). Yesterday,
      while John was in the hospital for a routine medical appointment, a new nurse
      accidentally administered the wrong medication to him. John was allergic to
      the drug and he immediately went into shock and experienced cardiac arrest (a
      heart attack). Doctors attempted to resuscitate him but he died minutes after
      the medication was administered. Did John''s job cause his premature death?\nOptions:\n-
      Yes\n- No\n\nRespond with the corresponding output fields, starting with the
      field `[[ ## reasoning ## ]]`, then `[[ ## answer ## ]]`, then `[[ ## explanation
      ## ]]`, and then ending with the marker for `[[ ## completed ## ]]`."}],"model":"gpt-4o-mini","max_tokens":1000,"temperature":0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '2865'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.65.3
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.65.3
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '600.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.8
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//jFVNbyM3DL37VxCzh17swPno2smtRVG0BdqiQdEWmwQGLdEz3GokQeTY
        8S7y3wtpPB6ndYq9GBg9knrke6Y+TwAqttUdVKZBNW10s2+XH+J9+vDdH+bnX+Mn/mt339xLWP/4
        /fXC/1ZNc0ZYfySjQ9aFCW10pBx8D5tEqJSrXi5uLq+XN/Ob2wK0wZLLaXXU2U2Ytex5djW/upnN
        F7PL5SG7CWxIqjt4mAAAfC6/mae39FzdwXw6nLQkgjVVd8cggCoFl08qFGFR9FpNR9AEr+QL9YcH
        ePcOEqEEz77OH09Pj/4b0H1kgw4iJQkeWq4bBRO8sKUE2hBsMXHoBDZoNCQBbbBEaOJ1p2RBA/wU
        Gv+VgCXU5gL+bNjRcOaCr2dKqQV6jkG6RDkBZU2iQQAVGhb4GNbg+lr503W+BoPeUJrCrmHTgHDt
        ecMGvbo9cBvR5MtzdEPotJkWtty2ZBmVwGAnBGHTs4IdSglA5yjVbPIwTJYx35mBXQq+hpxtsJyj
        zZKJUiIL630J8l0SuoDfG0q0CYkKu7HZ3Ma/RpMJhi0ldO5AFCwZx54AvS1FLW3JhdiS18x36LtA
        nMjo2Euu9rqfnrADSimkKfig5TgzYRVym8y2kyngm1ob11nqdT3pw7It1XoKbn8gkRnERC1qlrJX
        /NE/+t5h6GVHabDXL2FE6Dk69P1kD/DJZewL6+hQlI2A5S1LDi2mKTq3p74ZXHHeMxfwQ9jRdhji
        GU+8niP687bA/7MD9mYYmLAAglDElC9ib9iS1zNWGex+xicHf7BIRzIF1sJukPRNL0zBEdr8tz5Y
        ude0zK+oOlw5SPolSh72HNlerdO9kmjTCebd5jvnDucvx0XlQh1TWMsBP55v8viaVb+E8lISDbEq
        6MsE4KksxO7VjqtiCm3UlYa/yeeCXy8v+3rVuIdH9Gq+PKAaFN0ILJa30zMFV5YU2cnJTq0Mmobs
        mDouYOwshxNgctL2f+mcq33cv19SfgSMoahkVzFlN75ueQxLlN+pt8KOYy6EK6G0ZUMrZUpZCksb
        7Fz/elSyF6V2tWFfU4qJ+ydkE1fz94vrBd5ez99Xk5fJPwAAAP//AwA1GRoDUAcAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 91cd4aa12d3d339c-DEL
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 07 Mar 2025 21:47:31 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - wandb
      openai-processing-ms:
      - '2808'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '30000'
      x-ratelimit-limit-tokens:
      - '150000000'
      x-ratelimit-remaining-requests:
      - '29999'
      x-ratelimit-remaining-tokens:
      - '149998322'
      x-ratelimit-reset-requests:
      - 2ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_3204a9fec6b18827e5e93d5d55e62c43
    status:
      code: 200
      message: OK
- request:
    body: '{"messages":[{"role":"system","content":"Your input fields are:\n1. `question`
      (str)\n\nYour output fields are:\n1. `reasoning` (str)\n2. `answer` (str)\n3.
      `explanation` (str)\n\nAll interactions will be structured in the following
      way, with the appropriate values filled in.\n\n[[ ## question ## ]]\n{question}\n\n[[
      ## reasoning ## ]]\n{reasoning}\n\n[[ ## answer ## ]]\n{answer}\n\n[[ ## explanation
      ## ]]\n{explanation}\n\n[[ ## completed ## ]]\n\nIn adhering to this structure,
      your objective is: \n        Given the fields `question`, produce the fields
      `answer`, `explanation`."},{"role":"user","content":"[[ ## question ## ]]\nHow
      would a typical person answer each of the following questions about causation?\nLong
      ago, when John was only 17 years old, he got a job working for a large manufacturing
      company. He started out working on an assembly line for minimum wage, but after
      a few years at the company, he was given a choice between two line manager positions.
      He could stay in the woodwork division, which is where he was currently working.
      Or he could move to the plastics division. John was unsure what to do because
      he liked working in the woodwork division, but he also thought it might be worth
      trying something different. He finally decided to switch to the plastics division
      and try something new. For the last 30 years, John has worked as a production
      line supervisor in the plastics division. After the first year there, the plastics
      division was moved to a different building with more space. Unfortunately, through
      the many years he worked there, John was exposed to asbestos, a highly carcinogenic
      substance. Most of the plastics division was quite safe, but the small part
      in which John worked was exposed to asbestos fibers. And now, although John
      has never smoked a cigarette in his life and otherwise lives a healthy lifestyle,
      he has a highly progressed and incurable case of lung cancer at the age of 50.
      John had seen three cancer specialists, all of whom confirmed the worst: that,
      except for pain, John''s cancer was untreatable and he was absolutely certain
      to die from it very soon (the doctors estimated no more than 2 months). Yesterday,
      while John was in the hospital for a routine medical appointment, a new nurse
      accidentally administered the wrong medication to him. John was allergic to
      the drug and he immediately went into shock and experienced cardiac arrest (a
      heart attack). Doctors attempted to resuscitate him but he died minutes after
      the medication was administered. Did misadministration of medication cause John''s
      premature death?\nOptions:\n- Yes\n- No\n\nRespond with the corresponding output
      fields, starting with the field `[[ ## reasoning ## ]]`, then `[[ ## answer
      ## ]]`, then `[[ ## explanation ## ]]`, and then ending with the marker for
      `[[ ## completed ## ]]`."}],"model":"gpt-4o-mini","max_tokens":1000,"temperature":0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '2889'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.65.3
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.65.3
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '600.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.8
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//jFVNb+NGDL37VxDaw15sw0m8sZvbFuihRQu0wAZFmwQGPUNJ08yHlqSc
        GIv892Ik2VLaDZCLAM0jHx/nUdS3GUDhbHEDhalRTWj84sft383tRq9+/yP8yuFwW5vN19vr8rev
        h5+sFvOckfb/kNFT1tKk0HhSl2IPGyZUyqwXm/XF1Xa9+nTZASFZ8jmtanSxTovgoltcri7Xi9Vm
        cbEdsuvkDElxA3czAIBv3TPrjJaeixtYzU8ngUSwouLmHARQcPL5pEARJ4qx1zyAJkWl2Em/u4MP
        H4AJJUUXq/zy8HAfP4MeG2fQQ0MsKUJwVa1gUhRniUFrguAEbRYvypj7hlRCIOtM/4YCCNYxGQWD
        rVDGf0l1/CjQMAXUlgksodZL+Oy1Tm1VdwHwlHM9E9ojSFuWxFlbySmAEgcX0YNvYwUGoyGed3pc
        yMVRCZRdVRFDmRhqJ32NjjTHoffElTO5a9Mp1dQBT5xiNelgCT9H0EzQXdiz9nUmLRJz4iwC9gRC
        1DWdY8pOIh0oKmiNCp5sLnNWMwdL0rgstiZooyX2x9xkTei1BifSkizhS01MZWKaQ8B4hKfUepv1
        GN9a6rnfY4Z1FvLokB28OCtZ3sf72I8BRnkiPs3AXyQjRM+Nx9hzDfiXd5Ttatk3XIc99Vrc+X4w
        TmzEaEHoQPxdz3LnTNJ6pdwaGGTr0AAyk+gS/qydp36carSA4+Q47yOJvOHmaUz+O7njIOHgaUiB
        omZjHrNzTgFBXBVd6QxGhRKNJs7aMp+6kKPOTMEJZX9bmedUJ8NXiHtP3VWostu3OrHqNKixZaGP
        km9f8ZEmDg5LiGxv0vSjZypbwbx4Yuv9cP5y3iI+VQ2nvQz4+bzM5ta7XlveGKKpKTr0ZQbw0G2r
        9tUCKhpOodGdpkeKmfDTdt3zFeOSHNGL7fWAalL0I7DZDEvuNeHOkqLzMll4hUFTkx1Tx+2IrXVp
        Aswmbf9fzve4z8vxPfQjYAw1SnbXcJ6w1y2PYUz5J/JW2PmaO8GFEB+coZ064myFpRJbP/yO5ChK
        YVe6WBE37Pr9Xja71fXmaoM/XK2ui9nL7F8AAAD//wMAOfAASO0GAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 91cd4ab4df81339c-DEL
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 07 Mar 2025 21:47:34 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - wandb
      openai-processing-ms:
      - '2251'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '30000'
      x-ratelimit-limit-tokens:
      - '150000000'
      x-ratelimit-remaining-requests:
      - '29999'
      x-ratelimit-remaining-tokens:
      - '149998316'
      x-ratelimit-reset-requests:
      - 2ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_90a2719c179be2d8f2b1500cf0f1d5a4
    status:
      code: 200
      message: OK
version: 1
